version: '3.8'

services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data/
    env_file:
      - .env

  web:
    build: .
    command: >
      sh -c "python manage.py wait_for_db &&
          python manage.py migrate &&
          python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./:/code
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - redis
      - db

  redis:
    image: "redis:alpine"

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A rick_and_morty worker -l INFO"
    env_file:
      - .env
    restart: on-failure
    depends_on:
      - web
      - redis
      - db

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
             celery -A rick_and_morty beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    env_file:
      - .env
    restart: on-failure
    depends_on:
      - web
      - redis
      - db
